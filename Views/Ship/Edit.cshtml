@using Microsoft.AspNetCore.Http;
@{
    ViewData["Title"] = "Edit Ship";
    ViewData["sidebar"] = true;
    User CurrentUser = Helper.CurrentUser(Context.Session);
    Ship ship = (Ship)ViewData["ship"];
}

<div class="container">
    <form method="post" action="/Ship/Update/@ship.id">
        <div class="form-group">
            <label for="hin">Ship HIN</label>
            <input type="text" class="form-control" value="@ship.HIN" name="hin" placeholder="Enter Ship's HIN">
        </div>
        <div class="form-group">
            <label for="hin">Nick Name</label>
            <input type="text" class="form-control" value="@ship.NickName" name="nick_name" placeholder="Enter Nick Name">
        </div>
        <div class="form-group">
            <label for="hin">Allocated Birth</label>
            <input type="text" class="form-control" value="@ship.AllocatedBirth" name="alloc_birth" placeholder="Enter Allocated Birth">
        </div>
        <div class="form-group">
            <label for="hin">Allocated Terminal</label>
            <input type="text" class="form-control" value="@ship.AllocatedTerminal" name="alloc_term" placeholder="Enter Allocated Terminal">
        </div>
        @if (CurrentUser.Type == "Trader")
        {
            List<Item> ship_items = ship.Items();
            <div class="form-group">
                <label for="items">Attach Items</label>
                <select class="form-control" id="items-selector" multiple>
                    @foreach (Item item in Item.GetAllByTrader(CurrentUser.id))
                    {
                        if (!ship_items.Exists(ship_item => ship_item.id == item.id))
                        {
                            <option value="@item.id">@item.Name</option>
                        }
                    }
                </select>

                <label>Attached Items</label>
                <table id="selected-items">
                    @foreach (Item item in ship_items)
                    {
                        <tr>
                            <td class="item-name">@item.Name</td>
                            <td><input type="hidden" name="items[]" value="@item.id" /></td>
                            <td><input type="number" name="quantities[]" value="@item.QuantityOnShip(ship.id)" /></td>
                            <td class="delete-btn">&nbsp;&nbsp;&nbsp;&cross;</td>
                        </tr>
                    }
                </table>
            </div>
            <script>
                const itemsSelector = document.querySelector('#items-selector')
                const selectedItems = document.querySelector('#selected-items')

                itemsSelector.addEventListener('change', function () {
                    const item = document.createElement('tr')
                    const nameCell = document.createElement('td')
                    nameCell.setAttribute('class', 'item-name')
                    nameCell.innerHTML = itemsSelector.options[this.selectedIndex].text

                    const itemCell = document.createElement('td')
                    const i = document.createElement('input')
                    i.setAttribute('type', 'hidden')
                    i.setAttribute('name', 'items[]')
                    i.setAttribute('value', itemsSelector.value)
                    itemCell.appendChild(i)

                    const quantityCell = document.createElement('td')
                    const q = document.createElement('input')
                    q.setAttribute('type', 'number')
                    q.setAttribute('name', 'quantities[]')
                    q.setAttribute('value', 0)
                    quantityCell.appendChild(q)

                    const deleteBtn = document.createElement('td')
                    deleteBtn.setAttribute('class', 'delete-btn')
                    deleteBtn.innerHTML = "&nbsp;&nbsp;&nbsp;&cross;"

                    item.appendChild(nameCell)
                    item.appendChild(itemCell)
                    item.appendChild(quantityCell)
                    item.appendChild(deleteBtn)
                    selectedItems.appendChild(item)

                    itemsSelector.options[this.selectedIndex].remove()
                })

                document.addEventListener('click', function (e) {
                    const target = e.target
                    if (target.classList.contains('delete-btn')) {
                        const item = target

                        const temp = document.createElement('option')
                        temp.setAttribute('value', item.parentElement.querySelector('input[name^=items]').value)
                        temp.innerHTML = item.parentElement.querySelector('.item-name').innerHTML
                        itemsSelector.appendChild(temp)

                        item.parentElement.remove()
                    }
                })
            </script>
        }
        <button type="submit" class="btn btn-primary">Submit</button>
    </form>
</div>